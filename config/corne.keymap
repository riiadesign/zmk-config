/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <125>;
    quick-tap-ms = <150>;
};

&lt {
    tapping-term-ms = <125>;
    quick-tap-ms = <150>;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "base";
            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E                  &kp R    &kp T        &kp Y    &kp U        &kp I            &kp O    &kp P     &kp GRAVE
&kp LCTRL   &kp A  &kp S  &kp D                  &kp F    &kp G        &kp H    &kp J        &kp K            &kp L    &kp SEMI  &kp SQT
&kp LSHFT   &kp Z  &kp X  &kp C                  &kp V    &kp B        &kp N    &kp M        &kp COMMA        &kp DOT  &kp FSLH  &kp KP_ENTER
                          &mt LEFT_ALT LEFT_GUI  &kp TAB  &kp SPACE    &kp RET  &lt 1 SPACE  &lt 2 BACKSPACE
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "number";
            bindings = <
&kp TAB  &kp N1  &kp N2  &kp N3        &kp N4  &kp N5    &kp N6  &kp N7  &kp N8  &kp N9  &kp N0     &kp BSLH
&trans   &trans  &trans  &trans        &trans  &trans    &trans  &kp N4  &kp N5  &kp N6  &kp LBKT   &kp RBKT
&trans   &trans  &trans  &trans        &trans  &trans    &trans  &kp N1  &kp N2  &kp N3  &kp MINUS  &kp EQUAL
                         &kp LEFT_GUI  &trans  &trans    &trans  &trans  &trans
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "function";
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6    &kp F7   &kp F8    &kp F9    &kp F10    &kp F11    &kp F12
&trans  &trans  &trans  &trans  &trans  &trans    &kp INS  &kp HOME  &kp UP    &kp END    &kp PG_UP  &kp C_VOL_UP
&trans  &trans  &trans  &trans  &trans  &trans    &kp DEL  &kp LEFT  &kp DOWN  &kp RIGHT  &kp PG_DN  &kp C_VOL_DN
                        &trans  &trans  &trans    &trans   &trans    &trans
            >;
        };

        connection_layer {
            bindings = <
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans        &trans          &trans  &trans  &trans
            >;

            label = "connect";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        connect_chord {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
